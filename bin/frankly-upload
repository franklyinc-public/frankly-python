#!/usr/bin/env python
from __future__ import division
from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals

import os
import sys
import traceback

from argparse import ArgumentParser
from argparse import REMAINDER

from frankly import FranklyClient

def parse_arguments():
    parser = ArgumentParser()
    parser.add_argument('-a', '--address',  default='https://app.franklychat.com', help="Address of the Frankly servers")
    parser.add_argument('-c', '--category', default='chat',      help="The category in which the uploaded files belong to")
    parser.add_argument('-t', '--type',     default=None,        help="The type of files being uploaded")
    parser.add_argument('-k', '--key',      default=None,        help="The application authentication key (from Frankly console)")
    parser.add_argument('-s', '--secret',   default=None,        help="The application authentication secret (from Frankly console)")
    parser.add_argument('-v', '--verbose',  action='store_true', help="Run in verbose mode")
    parser.add_argument('files',            nargs=REMAINDER,     help="Paths to local files to upload to Frankly servers")
    return parser.parse_args()

args = None
verb = False

try:
    args = parse_arguments()
    verb = args.verbose

    if args.key is None:
        key = os.getenv('FRANKLY_APP_KEY')
    else:
        key = args.key

    if args.secret is None:
        secret = os.getenv('FRANKLY_APP_SECRET')
    else:
        secret = args.secret

    if key is None:
        sys.stderr.write("Error: no auth key found in either the command line arguments or environment variables")
        sys.exit(1)

    if secret is None:
        sys.stderr.write("Error: no auth secret found in either the command line arguments or environment variables")
        sys.exit(1)

    address = os.getenv('FRANKLY_HOST', args.address)
    if verb:
        print('connecting to Frankly servers at', address, 'with key', key, '\n')

    client = FranklyClient(address)
    client.authenticate(key, secret)

    for f in args.files:
        if verb:
            print('verifying:', f)
        os.stat(f)
    print()

    for f in args.files:
        if verb:
            print('uploading:', f)
        f = client.upload_file_from_path(f, category=args.category, type=args.type)
        print(' =>', f.url, '\n')

except Exception as e:
    if verb:
        traceback.print_exc()
    else:
        sys.stderr.write('Error: %s\n' % e)
